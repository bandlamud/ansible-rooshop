- name: setup shipping server
  hosts: shipping
  become: yes
  tasks:
  - name: install maven package
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - maven
    - mysql

  - name: setup root password for system user
    ansible.builtin.user:
      name: roboshop
      comment: system user
      shell: /sbin/nologin
      home: /app

  - name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download the shipping application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
      dest: /tmp/shipping.zip

  - name: unarchive the shipping application
    ansible.builtin.unarchive:
      src:  /tmp/shipping.zip
      dest: /app
      remote_src: yes
      
  - name: install dependencies
    ansible.builtin.command: mvn clean package 
    args:
      chdir: /app

  - name: move the file to target directory
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
    args:
      chdir: /app

  - name: copy the shipping.service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: start and restarte the service
    ansible.builtin.systemd_service:
      name: shipping 
      daemon_reload: true
      state: started

  - name: install ansible pip 
    ansible.builtin.pip:
      executable: pip3.9
      name: "{{ item }}"
    loop:
    - cryptography
    - PyMySQL

  - name: load the data to mysql
    community.mysql.mysql_db:
      state: import
      name: all
      login_host: mysql.daws89s.fun
      login_user: root
      login_password: RoboShop@1
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql 
    - /app/db/master-data.sql

  - name: restart shipping service
    ansible.builtin.service:
      name: shipping
      state: restarted

    
  
